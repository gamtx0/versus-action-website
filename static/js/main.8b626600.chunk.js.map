{"version":3,"sources":["demo/Authenticate.js","demo/VersusProfile.js","components/ArtDrop.js","demo/Drop.js","components/Form.js","demo/Bid.js","components/Auction.js","demo/UniqueAuction.js","demo/EditionedAuction.js","App.js","config.js","serviceWorker.js","index.js"],"names":["Link","styled","a","Authenticate","loggedIn","user","signInOrOut","event","preventDefault","fcl","href","onClick","Profile","div","scriptBuyerStatus","VersusProfile","bidTransaction","useState","setVersusProfileFetched","versusProfile","setVersusProfile","useEffect","addr","t","response","fetchUserDataFromChain","balance","Art","Image","img","Title","h1","Artist","span","Description","Time","fetchVersusDrop","Drop","marketplaceAccount","drop","handleDrop","handleBidTransaction","sdk","dropResponse","fetchDrop","alt","src","art","uniqueStatus","metadata","name","artist","Date","endTime","toLocaleString","BidButton","input","BidFieldset","PriceFieldWrapper","SelectFieldWrapper","Select","select","EditionInfo","noop","tx","mods","opts","onStart","onSubmission","onUpdate","onSuccess","onError","onComplete","then","txId","console","fvsTx","get","info","subscribe","unsub","onceSealed","txStatus","error","env","Bid","dropId","auctionId","minNextBid","price","setPrice","status","setStatus","button","BidOnAuction","p","toString","includes","authorization","foo","type","value","onSubmit","e","htmlFor","min","step","onChange","target","UniqueAuctionBox","Winning","Loosing","Tie","EditionedAuctionBox","Subtitle","Pretext","Price","UniqueAuction","bidTranscation","winning","uniquePrice","className","id","EditionedAuction","auctions","parseInt","setAuctionId","activeAuction","find","maxEdition","editionPrice","editionStatus","map","edition","bids","generateEditionSelectBox","theme","flexboxgrid","gridSize","gutterWidth","outerMargin","mediaQuery","container","sm","md","lg","breakpoints","xs","App","setUser","setDrop","setBidTransaction","fluid","center","around","entries","Object","values","sort","b","padStart","sortEditionedAuctions","editionsStatuses","put","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8b626600.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport * as fcl from \"@onflow/fcl\";\n\nconst Link = styled.a`\n  color: #979797;\n  text-decoration: none;\n  transition: color 0.45s;\n\n  &:hover {\n    color: #eee;\n    transition: color 0.45s;\n  }\n`;\nconst Authenticate = ({ user: { loggedIn } }) => {\n  const signInOrOut = async (event) => {\n    event.preventDefault();\n\n    if (loggedIn) {\n      fcl.unauthenticate();\n    } else {\n      fcl.authenticate();\n    }\n  };\n\n  return (\n    <Link href=\"#\" onClick={signInOrOut}>\n      {loggedIn ? \"Sign Out\" : \"Sign In/Up\"}\n    </Link>\n  );\n};\n\nexport default Authenticate;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\n\nconst Profile = styled.div`\n  font-size: 0.8em;\n  color: #979797;\n\n  span {\n    display: block;\n\n    + span {\n      padding-top: 0.5rem;\n    }\n  }\n`;\n\nconst scriptBuyerStatus = `\n// This script checks that the accounts are set up correctly for the marketplace tutorial.\n//\n\nimport FungibleToken from 0x9a0766d93b6608b7\nimport NonFungibleToken from 0x631e88ae7f1d7c20\nimport Art, Auction, Versus from 0x1ff7e32d71183db0\n\npub struct AddressStatus {\n\n  pub(set) var address:Address\n  pub(set) var balance: UFix64\n  pub(set) var art: {UInt64: Art.Metadata}\n  init (_ address:Address) {\n    self.address=address\n    self.balance= 0.0\n    self.art= {}\n  }\n}\n\n/*\n  This script will check an address and print out its FT, NFT and Versus resources\n */\npub fun main(address:Address):AddressStatus {\n    // get the accounts' public address objects\n    let account = getAccount(address)\n    let status= AddressStatus(address)\n    \n    if let vault= account.getCapability(/public/flowTokenBalance).borrow<&{FungibleToken.Balance}>() {\n       status.balance=vault.balance\n    }\n\n    if let art= account.getCapability(Art.CollectionPublicPath).borrow<&{Art.CollectionPublic}>()  {\n       \n        for id in art.getIDs() {\n          var art=art.borrowArt(id: id) \n          status.art[id]=art!.metadata\n        }\n    }\n    return status\n\n}\n`;\n\nconst setupVersusUser = `\nimport FungibleToken from 0x9a0766d93b6608b7\nimport NonFungibleToken from 0x631e88ae7f1d7c20\nimport Art, Auction, Versus from 0x1ff7e32d71183db0\n\ntransaction() {\n\n    prepare(acct: AuthAccount) {\n\n      // store an empty NFT Collection in account storage\n      account.save<@NonFungibleToken.Collection>(<- Art.createEmptyCollection(), to: /storage/ArtCollection)\n\n      // publish a capability to the Collection in storage\n      account.link<&{Art.CollectionPublic}>(/public/ArtCollection, target: /storage/ArtCollection)\n      \n    }\n\n}\n`;\n\nconst VersusProfile = ({ user, bidTransaction }) => {\n  const [versusProfileFetched, setVersusProfileFetched] = useState(false);\n  const [versusProfile, setVersusProfile] = useState(false);\n\n  useEffect(() => {\n    async function fetchUserDataFromChain() {\n      const response = await fcl.send([\n        fcl.script(scriptBuyerStatus),\n        fcl.args([fcl.arg(user.addr, t.Address)]),\n      ]);\n      setVersusProfile(await fcl.decode(response));\n      setVersusProfileFetched(true);\n    }\n    fetchUserDataFromChain();\n  }, [user, bidTransaction]);\n\n  return (\n    <Profile>\n      <span>\n        <b> Address</b>: {user.addr || \"\"}\n      </span>\n      <span>\n        <b> Balance</b>: {versusProfile?.balance || \"0\"}\n      </span>\n    </Profile>\n  );\n};\n\nexport default VersusProfile;\n","import styled from \"styled-components\";\n\nexport const Art = styled.div`\n  margin-top: 50px;\n  color: black;\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  width: 310px;\n  border: 1px solid black;\n  display: block;\n  margin: auto;\n`;\n\nexport const Title = styled.h1`\n  font-size: 28px;\n  line-height: 32px;\n  margin-top: 26px;\n  margin-bottom: 10px;\n`;\n\nexport const Artist = styled.span`\n  display: block;\n  font-size: 12px;\n  line-height: 14px;\n  margin-bottom: 16px;\n`;\n\nexport const Description = styled.a`\n  color: #757575;\n  font-size: 12px;\n  text-decoration: none;\n`;\n\nexport const Remaining = styled.div`\n  color: #fa2061;\n  font-size: 17px;\n  line-height: 20px;\n  margin-top: 40px;\n`;\n\nexport const Time = styled.div`\n  color: #fa2061;\n  font-size: 18px;\n  line-height: 21px;\n`;\n","import React, { useEffect } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport * as sdk from \"@onflow/sdk\";\n\nimport {\n  Art,\n  Image,\n  Title,\n  Artist,\n  Description,\n  Remaining,\n  Time,\n} from \"../components/ArtDrop\";\n\nconst fetchVersusDrop = `\n// This script checks that the accounts are set up correctly for the marketplace tutorial.\n//\n\nimport Auction, Versus from 0x1ff7e32d71183db0\n\n/*\n  Script used to get the first active drop in a versus \n */\npub fun main(address:Address) : Versus.DropStatus?{\n  return Versus.getActiveDrop(address: address)\n}\n\n`;\n\nconst Drop = ({\n  marketplaceAccount,\n  drop,\n  handleDrop,\n  bidTransaction,\n  handleBidTransaction,\n}) => {\n  useEffect(() => {\n    async function fetchDrop() {\n      const response = await fcl.send([\n        fcl.script(fetchVersusDrop),\n        sdk.args([sdk.arg(marketplaceAccount, t.Address)]),\n      ]);\n      const dropResponse = await fcl.decode(response);\n //     console.log(dropResponse)\n      handleDrop(dropResponse);\n      handleBidTransaction(null); //we mark that the current transaction has been taken into account\n    }\n    if (drop == null || bidTransaction != null) {\n      fetchDrop();\n    }\n  }, [drop, marketplaceAccount, bidTransaction]);\n\n  return (\n    drop && (\n      <Art>\n        <Image alt=\"art\" src={drop.art} />\n        <Title>{drop.uniqueStatus.metadata.name}</Title>\n        <Artist>by: {drop.uniqueStatus.metadata.artist}</Artist>\n        <Description href=\"read\">Read about the piece...</Description>\n\n        <Time>Ends: {new Date(drop.uniqueStatus.endTime * 1000).toLocaleString()}</Time>\n\n      </Art>\n    )\n  );\n};\n//this needs to own UniqueAuction and EditionedAuction and bid state must go up here. TO refetch the drop\n\nexport default Drop;\n","import styled from \"styled-components\";\n\nexport const BidButton = styled.input`\n  background-color: #fa2061;\n  -moz-box-sizing: content-box;\n  -webkit-box-sizing: content-box;\n  box-sizing: content-box;\n  border: none;\n  border-radius: 8px;\n  color: white;\n  display: block;\n  font-size: 14px;\n  line-height: 19px;\n  margin-top: 21px;\n  max-width: 211px;\n  padding: 12px 0;\n  text-align: center;\n  transition: background-color 0.5s;\n  width: 100%;\n\n  &:hover {\n    background-color: darken(#fa2061, 15%);\n    cursor: pointer;\n    transition: background-color 0.5s;\n  }\n`;\n\nexport const BidFieldset = styled.div`\n  border: 0;\n  padding: 0px;\n\n  .text-label {\n    align-self: flex-end;\n    display: flex;\n    font-size: 13px;\n    font-weight: 700;\n    letter-spacing: 1%;\n  }\n`;\n\nexport const PriceFieldWrapper = styled.div`\n  position: relative;\n  max-width: 211px;\n  min-height: 43px;\n  width: 100%;\n\n  label,\n  input {\n    font-size: inherit;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    padding: 0.5em;\n  }\n\n  label {\n    background: white;\n    color: black;\n    line-height: 25px;\n    z-index: 2;\n  }\n\n  input {\n    color: inherit;\n    background: transparent;\n    border: none; // reset user agent styles\n    border-bottom: 1px solid #d3d8dd;\n    cursor: input;\n    padding-left: 60px;\n    padding-right: 0;\n    text-align: right;\n    width: 100%;\n    z-index: 1;\n  }\n`;\n\nexport const SelectFieldWrapper = styled.div`\n  border-bottom: 1px solid #d3d8dd;\n  margin-bottom: 21px;\n  max-width: 211px;\n  width: 100%;\n`;\n\nexport const Select = styled.select`\n  background: transparent;\n  text-align: right;\n  border: none;\n  border-bottom: 2px solid #d3d8dd\n  max-width: 198px;\n  width: 100%;\n  padding: 0.4em;\n  height: 22px;\n  font-size: inherit;\n  -moz-box-sizing: content-box;\n  -webkit-box-sizing: content-box;\n  box-sizing: content-box;\n  border-radius: 0px 8px 8px 0px;\n  cursor: pointer;\n  margin-bottom: 2px;\n`;\n\nexport const EditionInfo = styled.div`\n  display: flex;\n  align-content: center;\n  justify-content: space-between;\n\n  margin-bottom: 27px;\n  max-width: 211px;\n  padding-top: 21px;\n\n  font-size: 13px;\n  width: 100%;\n\n  .label {\n    text-align: left;\n  }\n\n  .data {\n    display: flex;\n    flex-direction: column;\n    text-align: right;\n\n    &__price-wrap {\n      &__currency-label {\n        padding-right: 2px;\n      }\n      &__price {\n        font-size: 17px;\n        font-weight: 700;\n        line-height: 12.89px;\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\n\nimport { BidFieldset, BidButton, PriceFieldWrapper } from \"../components/Form\";\n\nconst bidTransaction = `import FungibleToken from 0x9a0766d93b6608b7\nimport NonFungibleToken from 0x631e88ae7f1d7c20\nimport Art, Auction, Versus from 0x1ff7e32d71183db0\n\n/*\n    Transaction to make a bid in a marketplace for the given dropId and auctionId\n\n */\ntransaction(marketplace: Address, dropId: UInt64, auctionId: UInt64, bidAmount: UFix64) {\n    // reference to the buyer's NFT collection where they\n    // will store the bought NFT\n\n    let vaultCap: Capability<&{FungibleToken.Receiver}>\n    let collectionCap: Capability<&{Art.CollectionPublic}> \n    // Vault that will hold the tokens that will be used\n    // to buy the NFT\n    let temporaryVault: @FungibleToken.Vault\n\n    prepare(account: AuthAccount) {\n\n        // get the references to the buyer's Vault and NFT Collection receiver\n        var collectionCap = account.getCapability<&{Art.CollectionPublic}>(Art.CollectionPublicPath)\n\n        // if collection is not created yet we make it.\n        if !collectionCap.check() {\n            // store an empty NFT Collection in account storage\n            account.save<@NonFungibleToken.Collection>(<- Art.createEmptyCollection(), to: Art.CollectionStoragePath)\n\n            // publish a capability to the Collection in storage\n            account.link<&{Art.CollectionPublic}>(Art.CollectionPublicPath, target: Art.CollectionStoragePath)\n        }\n\n        self.collectionCap=collectionCap\n        \n        self.vaultCap = account.getCapability<&{FungibleToken.Receiver}>(/public/flowTokenReceiver)\n                   \n        let vaultRef = account.borrow<&FungibleToken.Vault>(from: /storage/flowTokenVault)\n            ?? panic(\"Could not borrow owner's Vault reference\")\n\n        // withdraw tokens from the buyer's Vault\n        self.temporaryVault <- vaultRef.withdraw(amount: bidAmount)\n    }\n\n    execute {\n        // get the read-only account storage of the seller\n        let seller = getAccount(marketplace)\n\n        // get the reference to the seller's sale\n        let versusRef = seller.getCapability(Versus.CollectionPublicPath)\n                         .borrow<&{Versus.PublicDrop}>()\n                         ?? panic(\"Could not borrow seller's sale reference\")\n\n        versusRef.placeBid(dropId: dropId, auctionId: auctionId, bidTokens: <- self.temporaryVault, vaultCap: self.vaultCap, collectionCap: self.collectionCap)\n    }\n}\n \n \n`;\n\nconst Bid = ({\n  marketplaceAccount,\n  dropId,\n  auctionId,\n  minNextBid,\n  handleBidTransaction,\n}) => {\n  const [price, setPrice] = useState(minNextBid);\n  const[status,setStatus] = useState(\"\")\n\n  useEffect(() => setPrice(minNextBid), [minNextBid, auctionId]);\n\n  const BidOnAuction = async () => {\n\n    var p=price\n    if(!p.toString().includes(\".\")){\n      p=price + \".0\"\n    }\n    const response = await tx([\n\n      fcl.transaction(bidTransaction),\n      fcl.args([\n        fcl.arg(marketplaceAccount, t.Address),\n        fcl.arg(dropId, t.UInt64),\n        fcl.arg(auctionId, t.UInt64),\n        fcl.arg(p, t.UFix64),\n      ]),\n      fcl.proposer(fcl.currentUser().authorization),\n      fcl.payer(fcl.currentUser().authorization),\n      fcl.authorizations([fcl.currentUser().authorization]),\n      fcl.limit(9000),\n    ], {\n      onStart() {\n        setStatus(\"Transaction received\")\n      },\n      async onSuccess(foo) {\n        setStatus(\"Transaction success\")\n        handleBidTransaction(foo)\n      },\n      onSubmission() {\n        setStatus(\"Transaction submitted\")\n      },\n      async onComplete() {\n        setStatus(\"\")\n      },\n      async onError(error) {\n        setStatus(\"Transaction Error, see console for error message!\")\n      }\n\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    BidOnAuction();\n  }\n\n\n  let button\n  if(status === \"\") {\n      button=<BidButton type=\"submit\" value=\"Place Bid\" />\n  } else {\n      button=<div>{status}</div>\n  }\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        BidOnAuction();\n      }}\n    >\n      <BidFieldset>\n        <PriceFieldWrapper>\n          <label htmlFor=\"price\">&#120125;</label>\n          <input\n            name=\"price\"\n            type=\"number\"\n            min={minNextBid}\n            step=\"0.01\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          />\n        </PriceFieldWrapper>\n        {button}\n      </BidFieldset>\n    </form> \n    \n  );\n};\n\nconst noop = async () => {}\n\nasync function tx(mods = [], opts = {}) {\n  const onStart = opts.onStart || noop\n  const onSubmission = opts.onSubmission || noop\n  const onUpdate = opts.onUpdate || noop\n  const onSuccess = opts.onSuccess || noop\n  const onError = opts.onError || noop\n  const onComplete = opts.onComplete || noop\n\n  try {\n    onStart()\n    var txId = await fcl.send(mods).then(fcl.decode)\n    console.info(\n      `%cTX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      \"color:purple;font-weight:bold;font-family:monospace;\"\n    )\n    onSubmission(txId)\n    var unsub = await fcl.tx(txId).subscribe(onUpdate)\n    var txStatus = await fcl.tx(txId).onceSealed()\n    unsub()\n    console.info(\n      `%cTX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      \"color:green;font-weight:bold;font-family:monospace;\"\n    )\n    await onSuccess(txStatus)\n    return txStatus\n  } catch (error) {\n    console.error(\n      `TX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      error\n    )\n    onError(error)\n  } finally {\n    await onComplete()\n  }\n}\n\nfunction fvsTx(env, txId) {\n  return `https://flow-view-source.com/${env}/tx/${txId}`\n}\nexport default Bid;\n","import styled from \"styled-components\";\n\nexport const UniqueAuctionBox = styled.div`\n  margin-top: 100px;\n`;\n\nexport const Winning = styled.span`\n  background: rgba(61, 215, 58, 0.2);\n  border-radius: 4.5px;\n  color: #3dd73a;\n  display: block;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 14px;\n  text-align: center;\n  margin: 23px 0;\n  max-width: 100px;\n  padding: 6px 0;\n  width: 100%;\n`;\n\nexport const Loosing = styled.span`\n  background: rgba(250, 32, 32, 0.2);\n  border-radius: 4.5px;\n  color: #fa2020;\n  display: block;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 14px;\n  text-align: center;\n  margin: 23px 0;\n  max-width: 100px;\n  padding: 6px 0;\n  width: 100%;\n`;\n\nexport const Tie = styled.span`\n  background: rgba(170, 173, 30, 0.2);\n  border-radius: 4.5px;\n  color: #aaad1e;\n  display: block;\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 14px;\n  text-align: center;\n  margin: 23px 0;\n  max-width: 100px;\n  padding: 6px 0;\n  width: 100%;\n`;\n\nexport const EditionedAuctionBox = styled.div`\n  margin-top: 100px;\n  text-align: right;\n  color: black;\n`;\n\nexport const Title = styled.h1`\n  font-size: 24px;\n  line-height: 28px;\n  margin-bottom: 10px;\n`;\n\nexport const Subtitle = styled.div`\n  color: black;\n  font-size: 14px;\n  line-height: 16px;\n  margin-bottom: 19px;\n\n  span {\n    text-decoration: underline;\n  }\n`;\n\nexport const Pretext = styled.span`\n  display: block;\n  font-size: 13px;\n  margin-bottom: 10px;\n`;\n\nexport const Price = styled.span`\n  display: block;\n  font-size: 31px;\n  line-height: 36px;\n`;\n\nexport const History = styled.div`\n  margin-top: 43px;\n\n  span {\n    font-size: 14px;\n    text-align: left;\n\n    span {\n      font-weight: 700;\n    }\n  }\n`;\n","import React from \"react\";\n\nimport Bid from \"./Bid\";\nimport Events from \"./Events\";\n\nimport {\n  UniqueAuctionBox,\n  Title,\n  Subtitle,\n  Pretext,\n  Price,\n  Winning,\n  Loosing,\n  Tie,\n  History,\n} from \"../components/Auction\";\n\nconst UniqueAuction = ({\n  drop,\n  marketplaceAccount,\n  handleBidTransaction,\n  bidTranscation,\n}) => {\n  var status = <Winning>Highest bid</Winning>;\n  if (drop.winning === \"EDITIONED\") {\n    status = <Loosing>Lowest bid</Loosing>;\n  } else if (drop.winning === \"TIE\") {\n    status = <Tie>Tied bid</Tie>;\n  }\n\n  return (\n    <UniqueAuctionBox>\n      <Title>Own the 1/1 NFT</Title>\n      <Subtitle>\n        <span>*Plus</span> the original painting\n      </Subtitle>\n      <Pretext>current bid:</Pretext>\n      <Price>&#120125; {drop.uniquePrice}</Price>\n      <div className=\"margin-bottom-277\">{status}</div>\n\n      <Bid\n        marketplaceAccount={marketplaceAccount}\n        dropId={drop.dropId}\n        auctionId={drop.uniqueStatus.id}\n        minNextBid={drop.uniqueStatus.minNextBid}\n        handleBidTransaction={handleBidTransaction}\n        className=\"margin-top-170\"\n      />\n      \n    </UniqueAuctionBox>\n  );\n};\n\nexport default UniqueAuction;\n\n/*\n{ drop.firstBidBlock &&\n      <History>\n        <Pretext>\n          bid history: <span>{drop.uniqueStatus.bids}</span>\n        </Pretext>\n        {\n          <Events\n            startBlock={drop.firstBidBlock}\n            dropId={drop.dropId}\n            auctionId={drop.uniqueStatus.id}\n            bidTranscation={bidTranscation}\n          />\n        }\n      </History> \n      }\n\n\n      */","import React, { useState } from \"react\";\nimport Bid from \"./Bid\";\nimport {\n  EditionedAuctionBox,\n  Title,\n  Price,\n  Winning,\n  Loosing,\n  Tie,\n  Pretext,\n  History,\n} from \"../components/Auction\";\n\nimport {\n  BidFieldset,\n  SelectFieldWrapper,\n  Select,\n  EditionInfo,\n} from \"../components/Form\";\n\nimport Events from \"./Events\";\n\nconst EditionedAuction = ({\n  drop,\n  marketplaceAccount,\n  handleBidTransaction,\n  auctions,\n  bidTransaction,\n}) => {\n  const [auctionId, setAuctionId] = useState(parseInt(auctions[0].id));\n\n  function generateEditionSelectBox(editionStatus, activeAuction) {\n    return (\n      <div className=\"max-width-211\">\n        <SelectFieldWrapper>\n          <label htmlFor=\"editions\" className=\"text-label\">\n            Select the edition # to bid on\n          </label>\n          <Select\n            name=\"editions\"\n            value={auctionId}\n            onChange={(e) => setAuctionId(parseInt(e.target.value))}\n          >\n            {editionStatus.map((edition) => (\n              <option key={edition.id} value={edition.id}>\n                #{edition.metadata.edition}\n              </option>\n            ))}\n          </Select>\n        </SelectFieldWrapper>\n        <EditionInfo>\n          <span className=\"label\">\n            Current bid on #{activeAuction.metadata.edition} is:\n          </span>\n          <span className=\"data\">\n            <span className=\"data__price-wrap\">\n              <span className=\"data__price-wrap__currency-label\">\n                &#120125;\n              </span>\n              <span className=\"data__price-wrap__price\">\n                {activeAuction.price}\n              </span>\n            </span>\n            <span className=\"data__price-wrap__bids\">\n              {activeAuction.bids} bids\n            </span>\n          </span>\n        </EditionInfo>\n      </div>\n    );\n  }\n\n  const activeAuction= auctions.find((a) => a.id== auctionId )\n\n  var status = <Winning>Highest bid</Winning>;\n  if (drop.winning === \"UNIQUE\") {\n    status = <Loosing>Lowest bid</Loosing>;\n  } else if (drop.winning === \"TIE\") {\n    status = <Tie>Tied bid</Tie>;\n  }\n\n  return (\n    <EditionedAuctionBox>\n      <Title>Own 1 of {activeAuction.metadata.maxEdition} NFTs</Title>\n      <Pretext className=\"pad-top-30\">collective total of all bids:</Pretext>\n      <Price>&#120125; {drop.editionPrice}</Price>\n      <div className=\"flex justify-content-end margin-bottom-110\">{status}</div>\n      <BidFieldset className=\"align-right\">\n        {generateEditionSelectBox(auctions, activeAuction)}\n        <Bid\n          marketplaceAccount={marketplaceAccount}\n          dropId={drop.dropId}\n          auctionId={auctionId}\n          minNextBid={activeAuction.minNextBid}\n          handleBidTransaction={handleBidTransaction}\n        />\n      </BidFieldset>\n\n    </EditionedAuctionBox>\n  );\n};\n\nexport default EditionedAuction;\n\n\n/*\n      { drop.firstBidBlock && <History>\n        <Pretext>\n          bid history: <span>{activeAuction.bids}</span>\n        </Pretext>\n        {\n          <Events\n            startBlock={drop.firstBidBlock}\n            dropId={drop.dropId}\n            auctionId={auctionId}\n            bidTransaction={bidTransaction}\n          />\n        }\n      </History>\n      } \n  \n      */","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport * as fcl from \"@onflow/fcl\";\n\nimport Authenticate from \"./demo/Authenticate\";\nimport VersusProfile from \"./demo/VersusProfile\";\nimport Drop from \"./demo/Drop\";\nimport UniqueAuction from \"./demo/UniqueAuction\";\nimport EditionedAuction from \"./demo/EditionedAuction\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport { Grid, Col, Row } from \"react-styled-flexboxgrid\";\n\nconst theme = {\n  flexboxgrid: {\n    // Defaults\n    gridSize: 12, // columns\n    gutterWidth: 1, // rem\n    outerMargin: 2, // rem\n    mediaQuery: \"only screen\",\n    container: {\n      sm: 46, // rem\n      md: 61, // rem\n      lg: 76, // rem\n    },\n    breakpoints: {\n      xs: 0, // em\n      sm: 48, // em\n      md: 64, // em\n      lg: 75, // em\n    },\n  },\n};\n\nexport const Image = styled.img`\n  width: 100px;\n  display: block;\n  margin: auto;\n`;\n\nconst marketplaceAccount = \"0x8027e3565a8941d1\"\n\nfunction App() {\n  const [user, setUser] = useState({});\n  const [drop, setDrop] = useState(null);\n  const [bidTransaction, setBidTransaction] = useState(null);\n\n  const handleDrop = (value) => {\n    setDrop(value);\n  };\n\n  const handleBidTransaction = (value) => {\n    setBidTransaction(value);\n  };\n\n  useEffect(\n    () => fcl.currentUser().subscribe((user) => setUser({ ...user })),\n    []\n  );\n\n  function sortEditionedAuctions(auctions) {\n    var entries = Object.values(auctions);\n    entries.sort(function (a, b) {\n      if (a.price > b.price) {\n        return 1;\n      }\n      if (b.price > a.price) {\n        return -1;\n      }\n\n      if (\n        a.metadata.edition.toString().padStart(2, 0) > b.metadata.edition.toString().padStart(2, 0)\n      ) {\n        return 1;\n      }\n\n      if (\n        b.metadata.edition.toString().padStart(2, 0) > a.metadata.edition.toString().padStart(2, 0)\n      ) {\n        return -1;\n      }\n\n      if (a.bids > b.bids) {\n        return 1;\n      }\n\n      if (b.price > a.price) {\n        return -1;\n      }\n\n      return 0;\n    });\n    return entries;\n  }\n  return (\n    <div className=\"content-wrapper\">\n      <ThemeProvider theme={theme}>\n        <Grid fluid>\n          <Row center=\"xs\">\n            <Col xs={4} className=\"flex justify-content-end align-items-center\">\n              <Authenticate user={user} />\n            </Col>\n            <Col xs={3}>\n              <Image className=\"logo\" src=\"logo.png\" />\n            </Col>\n            <Col\n              xs={4}\n              className=\"flex justify-content-start align-items-center\"\n            >\n              {user.loggedIn && (\n                <VersusProfile user={user} bidTransaction={bidTransaction} />\n              )}\n            </Col>\n          </Row>\n          <Row around=\"xs\">\n            <Col xs={4}>\n              {user.loggedIn && drop && (\n                <UniqueAuction\n                  drop={drop}\n                  marketplaceAccount={marketplaceAccount}\n                  handleBidTransaction={handleBidTransaction}\n                  bidTransaction={bidTransaction}\n                />\n              )}\n            </Col>\n            <Col xs={4}>\n              {user.loggedIn && (\n                <Drop\n                  marketplaceAccount={marketplaceAccount}\n                  drop={drop}\n                  handleDrop={handleDrop}\n                  bidTransaction={bidTransaction}\n                  handleBidTransaction={handleBidTransaction}\n                />\n              )}\n            </Col>\n            <Col xs={4}>\n              {user.loggedIn && drop && (\n                <EditionedAuction\n                  drop={drop}\n                  marketplaceAccount={marketplaceAccount}\n                  handleBidTransaction={handleBidTransaction}\n                  auctions={sortEditionedAuctions(drop.editionsStatuses)}\n                  bidTransaction={bidTransaction}\n                />\n              )}\n            </Col>\n          </Row> \n        \n        </Grid>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import * as fcl from \"@onflow/fcl\"\n\nfcl.config()\n // .put(\"accessNode.api\", \"http://localhost:8080\") // local Flow emulator\n // .put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\") // local dev wallet\n   .put(\"accessNode.api\", \"https://access-testnet.onflow.org\") // Flow testnet\n   .put(\"challenge.handshake\", \"https://flow-wallet-testnet.blocto.app/authn\") // Blocto testnet wallet\n   .put(\"env\", \"testnet\")\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.scss\";\nimport \"./config\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"bg-columns\"></div>\n    <div className=\"bg-triangle\"></div>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}